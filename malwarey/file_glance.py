import mimetypes
import os
import stat
import time
from typing import Tuple

here = os.path.abspath(os.path.dirname(__file__))


def _sizeof_fmt(num, suffix='B'):
    for unit in ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi', 'Ei', 'Zi']:
        if abs(num) < 1024.0:
            return f"{num:3.1f}{unit}{suffix}"
        num /= 1024.0
    return f"{num:.1f}{'Yi'}{suffix}"


def get_file_details(url: str) -> Tuple[str]:
    """
    Returns details about the file.
    
    :param url: File path
    :return: File details 
    
    >>> get_file_details(here + '/sample.txt')['Permissions']
    '-rw-rw-r--'
    
    """

    (mode, ino, dev, nlink, uid, gid, size, atime, mtime, ctime) = os.stat(url)
    file_stat = {
        'Permissions': stat.filemode(mode),
        'INode Index': ino,
        'Device': dev,
        'Number of hard links': nlink,
        'User ID': uid,
        'Group ID': gid,
        'Size': _sizeof_fmt(size),
        "Accessed time": time.ctime(atime),
        "Modified time": time.ctime(mtime),
        "Created time": time.ctime(ctime)
    }
    return file_stat


def guess_mime_type(url: str) -> Tuple[str, str]:
    """
    Returns the possible internet media type (MIME) for a file or url. 

    :param url: File or Url
    
    >>> guess_mime_type('a.bmp')
    ('image/x-ms-bmp', None)
    
    >>> guess_mime_type('tmz.tar.gz')
    ('application/x-tar', 'gzip')
    
    """

    return mimetypes.guess_type(url, False)


if __name__ == '__main__':
    import doctest

    doctest.testmod(verbose=True)

__all__ = ['guess_mime_type', 'get_file_details']
